[{"title":"在学校服务器上源码编译安装Mysql-8.0.25并运行","url":"//2021/10/26/%E5%9C%A8%E5%AD%A6%E6%A0%A1%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85Mysql-8-0-25%E5%B9%B6%E8%BF%90%E8%A1%8C/","content":"在学校服务器上源码编译安装Mysql-8.0.25并运行一、创建需要的目录连接NJUPT即可在自己的电脑上访问上课给的服务器，我懒得写一大堆命令，在MacOS系统的Transmit App里连接了服务器，之间图形界面把题目要求的文件夹建好了。\n# 目录如下~/mysql-8.0.25/my_build/package\n\n\n在package目录下还要\nmkdir bin lib share etc\n\n二、cmake编译老师说服务器上的cmake版本不够编译mysql-8.0.25，有cmake3.22的安装包但不是默认环境。\n总之先打开终端\n\n1、cmake编译我先copy一下PPT里给的命令看看什么效果。学校的服务器自带cmake，没有的可以自己配置一下。\ncmake .. \\-DCMAKE_INSTALL_PREFIX=$HOME/mysql-8.0.25/&#123;YOUR_DIRECTORY&#125;/package \\-DWITH_EXTRA_CHARSETS:STRING=all \\-DDOWNLOAD_BOOST=1 \\-DWITH_BOOST=../boost \\-DWITH_EMBEDDED_SERVER:BOOL=OFF \\-DWITH_MYISAM_STORAGE_ENGINE=1 \\-DWITH_INNOBASE_STORAGE_ENGINE=1 \\-DENABLED_LOCAL_INFILE=1 \\-DWITH_SSL=system \\-DCMAKE_CXX_COMPILER=/usr/bin/g++ \\-DCMAKE_C_COMPILER=/usr/bin/gcc\n\n\n没有出现报错，那接着往下，执行make -j 64。\n\n这个报错出现了超多次，使用cmake -version看了一下版本是3.22。g++ -version看g++版本是10.0.1。\n他妈的什么申必服务器，Google解决方案都要sudo但是学生账号没有服务器的sudo权限。\ng++: 错误：unrecognized command line option ‘-std=c++14’\n\n2、解决g++无法解析c++14的问题该说不说，学校这个服务器应该是被其他学生玩坏了，查了一下/user/bin目录下的gcc版本才4.8.5，害我大半夜在这疯狂找cmake指定gcc的方法。\n\n发现问题在/usr/bin下的gcc版本不够，那么干脆把B19031717文件夹下东西都删了，重新创建了package和下面的bin等四个目录。然后重新cmake编译一下。\n执行find / -name &quot;gcc&quot;命令发现gcc文件在/usr/local/bin下也有一个，并且版本是10.0.1，重新cmake编译时记得把DCMAKE_CXX_COMPILER和DCMAKE_C_COMPILER两个路径改成gcc版本高于5.2的路径（mysql-8.0.25需要gcc5.2以上）。\ncmake .. \\-DCMAKE_INSTALL_PREFIX=$HOME/mysql-8.0.25/&#123;YOUR_DIRECTORY&#125;/package \\-DWITH_EXTRA_CHARSETS:STRING=all \\-DDOWNLOAD_BOOST=1 \\-DWITH_BOOST=../boost \\-DWITH_EMBEDDED_SERVER:BOOL=OFF \\-DWITH_MYISAM_STORAGE_ENGINE=1 \\-DWITH_INNOBASE_STORAGE_ENGINE=1 \\-DENABLED_LOCAL_INFILE=1 \\-DWITH_SSL=system \\-DCMAKE_CXX_COMPILER=/usr/local/bin/g++ \\-DCMAKE_C_COMPILER=/usr/local/bin/gcc\n\n编译未报错，然后执行make -j 64\n\n执行make install\n\n执行cd package然后执行cp -r bin lib share etc ~/与 cd\n现在根目录就能看到bin、lib、share、etc四个文件夹，执行vim etc/my.cnf并写入如下内容。\n\n3、安装、初始化与启动# 安装mkdir -p ~/data/data ~/data/redo ~/data/tmp ~/data/binlog ~/data/relaylog ~/data/undomkdir log\n\n# 初始化./bin/mysqld --defaults-file=&quot;$HOME/etc/my.cnf&quot; --initialize-insecure --datadir=&quot;$HOME/data/data&quot; \n\n# 启动./bin/mysqld --defaults-file=&quot;$HOME/etc/my.cnf&quot; --datadir=&quot;$HOME/data/data&quot; --pid-file=&quot;$HOME/bin/mysqld1.pid&quot; &amp;\n\n安装没出现报错，但是初始化时产生了奇怪的问题。貌似是因为升级gcc时，生成的动态库没有替换老版本gcc的动态库。\n\n执行一下strings /usr/lib64/libstdc++.so.6 | grep GLIBC命令，发现如GLIBCXX的版本并不匹配。\n\n执行find / -name &quot;libstdc++.so*&quot;查找编译gcc时生成的最新动态库。发现了/usr/local/lib64/libstdc++.so.6.0.28 //最新动态库\n而在上图中使用的库是/usr/lib64/libstdc++.so.6。\n\n我们需要修改系统默认动态库的指向，即：重建默认库的软连接。但是学生账号没有权限，寄。\n气死了，马上到最后一步了，现在没有权限什么也干不了，早知道在自己的服务器上跑了！！\n","tags":["Mysql-8.0.25","南邮","南京邮电大学","实践周作业"]},{"title":"MacOS安装与配置nginx","url":"//2021/10/23/MacOS%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AEnginx/","content":"MacOS安装与配置nginx一、环境我用的是MacBook Pro M1，版本放在图里了。以下使用的终端都是iTerm2。\n\n二、安装HomebrewHomebrew是一款包管理工具，目前支持macOS和linux系统，Homebrew使用起来也很方便，如果已经安装好homebrew可以跳过这一条。\nARM版Homebrew需要安装在/opt/homebrew路径下，早期的时候需要手动创建目录执行命令，目前使用最新脚本不需要手动操作。\n直接执行：（这是官网给的命令，需要挂梯子）\n/bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot;\n\n国内：\n/bin/zsh -c &quot;$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)&quot;\n\n后面根据提示往下走就行，网上教程很多随便查查就有。\n安装完成之后重启终端执行：\nbrew -v\n\n我的结果⬇️，提示版本信息安装完成。\n\n三、通过Homebrew安装nginx先查一下nginx是否存在：\nbrew search nginx\n\n\n然后执行：\nbrew install nginx\n\n等待一会安装就完成了。然后使用brew info nginx命令查看nginx安装目录等信息。红色部分是nginx.config的位置，在旧版本Mac中应该是/usr/local/etc/nginx目录下，这里要注意一下。\n\n用vim编辑nginx.conf配置自己需要的东西吧。\n","tags":["nginx","MacOS","homebrew安装"]}]